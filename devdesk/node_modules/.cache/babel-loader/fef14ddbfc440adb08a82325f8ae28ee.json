{"ast":null,"code":"var _jsxFileName = \"/Users/angelynaliem/react/devdesk/src/components/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Label, Input, NavLink, Container, Col } from \"reactstrap\";\nimport { useHistory, Route } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = props => {\n  const history = useHistory();\n\n  const goHome = () => {\n    console.log(\"Going home\");\n    history.push(\"/\");\n  };\n\n  const goRegister = () => {\n    console.log(\"Going to register\");\n    history.push(\"/register\");\n  };\n\n  const goStudentDashboard = () => {\n    console.log(\"Going to student dashboard\");\n    history.push(\"/studentdashboard\");\n  }; //Set the state for user\n\n\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  }); //Set the state for error\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\"\n  }); //Set the state for server error\n\n  const [serverError, setServerError] = useState(\"\"); //Set the state for button\n\n  const [button, setButton] = useState(true); //Form schema for login\n\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Name is required\"),\n    password: yup.string().required(\"Password is required\")\n  }); //Form validation function for login\n\n  const validateChange = e => {\n    yup.reach(formSchema, e.target.name).validate(e.target.name ? e.target.value : null).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: \"\" //Clear any error messages\n\n      });\n    }).catch(err => {\n      console.log(err);\n      setErrors({ ...errors,\n        [e.target.name]: err.errors[0] //Display the error message\n\n      });\n    });\n  }; //Handle user input changes for login\n\n\n  const handleChanges = e => {\n    e.persist();\n    console.log(\"new input here!\", e.target.value);\n    const newUser = { ...user,\n      [e.target.name]: e.target.value\n    };\n    validateChange(e);\n    setUser(newUser);\n  }; //Submit form function for login\n\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(\"Form submitted!\");\n    axios.post(\"https://reqres.in/api/users\", user) //Temporary API\n    .then(response => {\n      console.log(\"POST is successful!\", response.data);\n      setServerError(null);\n      setUser({\n        Username: \"\",\n        Password: \"\"\n      }); //Clear the form\n    }).catch(err => {\n      setServerError(\"API POST request failed!\");\n    });\n  }; //If everything checks, then button is enabled\n\n\n  useEffect(() => {\n    formSchema.isValid(user).then(isValid => {\n      setButton(!isValid);\n    });\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"home\",\n    onClick: goHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"We're here to help.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Create a help ticket and we'll connect you \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 53\n    }\n  }), \" with a Lambda School Helper.\"), /*#__PURE__*/React.createElement(Container, {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, serverError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 24\n    }\n  }, serverError) : null, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"Username\",\n    value: user.username,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), errors.username.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 43\n    }\n  }, errors.username) : null))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\",\n    value: user.password,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), errors.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 43\n    }\n  }, errors.password) : null))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: button,\n    onClick: goStudentDashboard,\n    className: \"buttonForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navRegister\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nonClick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Haven't registered? \"), /*#__PURE__*/React.createElement(NavLink, {\n    onClick: goRegister,\n    className: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Click here\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/angelynaliem/react/devdesk/src/components/Login.js"],"names":["React","useState","useEffect","yup","axios","Button","Form","FormGroup","Label","Input","NavLink","Container","Col","useHistory","Route","Login","props","history","goHome","console","log","push","goRegister","goStudentDashboard","user","setUser","username","password","errors","setErrors","serverError","setServerError","button","setButton","formSchema","object","shape","string","required","validateChange","e","reach","target","name","validate","value","then","valid","catch","err","handleChanges","persist","newUser","submitForm","preventDefault","post","response","data","Username","Password","isValid","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Label, Input, NavLink, Container, Col } from \"reactstrap\";\nimport { useHistory, Route } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = (props) => {\n  const history = useHistory();\n\n  const goHome = () => {\n    console.log(\"Going home\");\n    history.push(\"/\");\n  };\n\n  const goRegister = () => {\n    console.log(\"Going to register\");\n    history.push(\"/register\");\n  };\n\n  const goStudentDashboard = () => {\n    console.log(\"Going to student dashboard\");\n    history.push(\"/studentdashboard\");\n  };\n\n  //Set the state for user\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n\n  //Set the state for error\n  const [errors, setErrors] = useState({ username: \"\", password: \"\" });\n\n  //Set the state for server error\n  const [serverError, setServerError] = useState(\"\");\n\n  //Set the state for button\n  const [button, setButton] = useState(true);\n\n  //Form schema for login\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Name is required\"),\n    password: yup.string().required(\"Password is required\"),\n  });\n\n  //Form validation function for login\n  const validateChange = (e) => {\n    yup\n      .reach(formSchema, e.target.name)\n      .validate(e.target.name ? e.target.value : null)\n      .then((valid) => {\n        setErrors({\n          ...errors,\n          [e.target.name]: \"\", //Clear any error messages\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrors({\n          ...errors,\n          [e.target.name]: err.errors[0], //Display the error message\n        });\n      });\n  };\n\n  //Handle user input changes for login\n  const handleChanges = (e) => {\n    e.persist();\n    console.log(\"new input here!\", e.target.value);\n    const newUser = { ...user, [e.target.name]: e.target.value };\n    validateChange(e);\n    setUser(newUser);\n  };\n\n  //Submit form function for login\n  const submitForm = (e) => {\n    e.preventDefault();\n    console.log(\"Form submitted!\");\n\n    axios\n      .post(\"https://reqres.in/api/users\", user) //Temporary API\n      .then((response) => {\n        console.log(\"POST is successful!\", response.data);\n        setServerError(null);\n        setUser({ Username: \"\", Password: \"\" }); //Clear the form\n      })\n      .catch((err) => {\n        setServerError(\"API POST request failed!\");\n      });\n  };\n\n  //If everything checks, then button is enabled\n  useEffect(() => {\n    formSchema.isValid(user).then((isValid) => {\n      setButton(!isValid);\n    });\n  }, [user]);\n\n  return (\n    <div>\n      <NavLink className=\"home\" onClick={goHome}>Home</NavLink>\n\n      <div className=\"login\">\n\n      <h3>We're here to help.</h3>\n      <p>Create a help ticket and we'll connect you <br></br> with a Lambda School Helper.</p>\n\n      <Container className=\"form\">\n      <Form onSubmit={submitForm}>\n        {serverError ? <p>{serverError}</p> : null}\n\n        {/* Username Field */}\n        <Col>\n        <FormGroup className=\"username\" >\n          <Label htmlFor=\"username\" xs={4}>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Username\"\n              value={user.username}\n              onChange={handleChanges}\n            ></Input>\n            {errors.username.length > 0 ? <p className=\"error\">{errors.username}</p> : null}\n          </Label>\n        </FormGroup>\n        </Col>\n\n        {/* Password Field */}\n        <Col>\n        <FormGroup >\n          <Label htmlFor=\"password\" xs={4} >\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={user.password}\n              onChange={handleChanges}\n            ></Input>\n            {errors.password.length > 0 ? <p className=\"error\">{errors.password}</p> : null}\n          </Label>\n        </FormGroup>\n        </Col>\n\n        <Button type=\"submit\" disabled={button} onClick={goStudentDashboard} className=\"buttonForm\" >\n          Login\n        </Button>\n      </Form>\n      </Container>\n\n      {/* If user hasn't registered, they would click the Register button instead and go to Eric's Register page*/}\n      <div className=\"navRegister\">\n      <NavLink className=\"nonClick\">Haven't registered? </NavLink>\n      <NavLink onClick={goRegister} className=\"click\">Click here</NavLink>\n      </div>\n\n     </div>\n\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}