{"ast":null,"code":"var _jsxFileName = \"/Users/angelynaliem/react/devdesk/src/components/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Label, Input, NavLink, Container, Col, FormFeedback } from \"reactstrap\";\nimport { useHistory, Route } from \"react-router-dom\";\nimport \"./Login.css\";\nimport StudentNav from './students/StudentNav';\n\nconst Login = props => {\n  const history = useHistory();\n\n  const goHome = () => {\n    console.log(\"Going home\");\n    history.push(\"/\");\n  };\n\n  const goRegister = () => {\n    console.log(\"Going to register\");\n    history.push(\"/register\");\n  };\n\n  const goStudentDashboard = () => {\n    console.log(\"Going to student dashboard\");\n    history.push(\"/student_dashboard\");\n  }; //Set the state for user\n\n\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    rememberMe: \"\"\n  }); //Set the state for error\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n    rememberMe: \"\"\n  }); //Set the state for server error\n\n  const [serverError, setServerError] = useState(\"\"); //Set the state for button\n\n  const [button, setButton] = useState(true); //Form schema for login\n\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Name is required\"),\n    password: yup.string().required('Password is required').matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one Special Case Character\"),\n    rememberMe: yup.boolean()\n  }); //Form validation function for login\n\n  const validateChange = e => {\n    yup.reach(formSchema, e.target.name).validate(e.target.name ? e.target.value : null).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: \"\" //Clear any error messages\n\n      });\n    }).catch(err => {\n      console.log(err);\n      setErrors({ ...errors,\n        [e.target.name]: err.errors[0] //Display the error message\n\n      });\n    });\n  }; //Handle user input changes for login\n\n\n  const handleChanges = e => {\n    e.persist();\n    console.log(\"new input here!\", e.target.value);\n    const newUser = { ...user,\n      [e.target.name]: e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n    };\n    validateChange(e);\n    setUser(newUser);\n  }; //Submit form function for login\n\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(\"Form submitted!\");\n    axios.post(\"https://reqres.in/api/users\", user) //Temporary API\n    .then(response => {\n      console.log(\"POST is successful!\", response.data);\n      setServerError(null);\n      setUser({\n        username: \"\",\n        password: \"\",\n        rememberMe: \"\"\n      }); //Clear the form\n    }).catch(err => {\n      setServerError(\"API POST request failed!\");\n    });\n  }; //If everything checks, then button is enabled\n\n\n  useEffect(() => {\n    formSchema.isValid(user).then(isValid => {\n      setButton(!isValid);\n    });\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StudentNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"We're here to help.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Create a help ticket and we'll connect you \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 54\n    }\n  }), \" with a Lambda School Helper.\"), /*#__PURE__*/React.createElement(Container, {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitForm,\n    className: \"formGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, serverError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 28\n    }\n  }, serverError) : null, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"Username\",\n    value: user.username,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }), errors.username.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, errors.username) : null))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\",\n    value: user.password,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }), errors.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, errors.password) : null))), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"check\",\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    name: \"check\",\n    id: \"check\",\n    value: user.rememberMe,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }), \" Remember me\")), /*#__PURE__*/React.createElement(NavLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"Forgot username/password?\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: button,\n    onClick: goStudentDashboard,\n    className: \"buttonForm\",\n    style: {\n      backgroundColor: \"#74CBC1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navRegister\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nonClick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Haven't registered? \"), /*#__PURE__*/React.createElement(NavLink, {\n    onClick: goRegister,\n    className: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Click here\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/angelynaliem/react/devdesk/src/components/Login.js"],"names":["React","useState","useEffect","yup","axios","Button","Form","FormGroup","Label","Input","NavLink","Container","Col","FormFeedback","useHistory","Route","StudentNav","Login","props","history","goHome","console","log","push","goRegister","goStudentDashboard","user","setUser","username","password","rememberMe","errors","setErrors","serverError","setServerError","button","setButton","formSchema","object","shape","string","required","matches","boolean","validateChange","e","reach","target","name","validate","value","then","valid","catch","err","handleChanges","persist","newUser","type","checked","submitForm","preventDefault","post","response","data","isValid","length","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Container,\n  Col,\n  FormFeedback,\n} from \"reactstrap\";\nimport { useHistory, Route } from \"react-router-dom\";\nimport \"./Login.css\";\nimport StudentNav from './students/StudentNav';\n\nconst Login = (props) => {\n  const history = useHistory();\n\n  const goHome = () => {\n    console.log(\"Going home\");\n    history.push(\"/\");\n  };\n\n  const goRegister = () => {\n    console.log(\"Going to register\");\n    history.push(\"/register\");\n  };\n\n  const goStudentDashboard = () => {\n    console.log(\"Going to student dashboard\");\n    history.push(\"/student_dashboard\");\n  };\n\n  //Set the state for user\n  const [user, setUser] = useState({ username: \"\", password: \"\", rememberMe: \"\" });\n\n  //Set the state for error\n  const [errors, setErrors] = useState({ username: \"\", password: \"\", rememberMe: \"\" });\n\n  //Set the state for server error\n  const [serverError, setServerError] = useState(\"\");\n\n  //Set the state for button\n  const [button, setButton] = useState(true);\n\n  //Form schema for login\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Name is required\"),\n    password: yup.string().required('Password is required').matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one Special Case Character\"),\n    rememberMe: yup.boolean(),\n    \n  });\n\n  //Form validation function for login\n  const validateChange = (e) => {\n    yup\n      .reach(formSchema, e.target.name)\n      .validate(e.target.name ? e.target.value : null)\n      .then((valid) => {\n        setErrors({\n          ...errors,\n          [e.target.name]: \"\", //Clear any error messages\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrors({\n          ...errors,\n          [e.target.name]: err.errors[0], //Display the error message\n        });\n      });\n  };\n\n  //Handle user input changes for login\n  const handleChanges = (e) => {\n    e.persist();\n    console.log(\"new input here!\", e.target.value);\n    const newUser = { ...user, [e.target.name] : e.target.type === \"checkbox\" ? e.target.checked : e.target.value };\n    validateChange(e);\n    setUser(newUser);\n  };\n\n  //Submit form function for login\n  const submitForm = (e) => {\n    e.preventDefault();\n    console.log(\"Form submitted!\");\n\n    axios\n      .post(\"https://reqres.in/api/users\", user) //Temporary API\n      .then((response) => {\n        console.log(\"POST is successful!\", response.data);\n        setServerError(null);\n        setUser({ username: \"\", password: \"\", rememberMe: \"\" }); //Clear the form\n      })\n      .catch((err) => {\n        setServerError(\"API POST request failed!\");\n      });\n  };\n\n  //If everything checks, then button is enabled\n  useEffect(() => {\n    formSchema.isValid(user).then((isValid) => {\n      setButton(!isValid);\n    });\n  }, [user]);\n\n  return (\n    <div>\n     <StudentNav />\n      <div className=\"login\">\n        <h2>We're here to help.</h2>\n        <p>\n          Create a help ticket and we'll connect you <br></br> with a Lambda\n          School Helper.\n        </p>\n\n        <Container className=\"form\">\n          <Form onSubmit={submitForm} className=\"formGroup\"> \n            {serverError ? <p>{serverError}</p> : null}\n\n            {/* Username Field */}\n            <Col>\n              <FormGroup className=\"username\">\n                <Label htmlFor=\"username\" xs={4}>\n                  <Input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    placeholder=\"Username\"\n                    value={user.username}\n                    onChange={handleChanges}\n                  ></Input>\n                  {errors.username.length > 0 ? (\n                    <p className=\"error\">{errors.username}</p>\n                  ) : null}\n                </Label>\n              </FormGroup>\n            </Col>\n\n            {/* Password Field */}\n            <Col>\n              <FormGroup>\n                <Label htmlFor=\"password\" xs={4}>\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    value={user.password}\n                    onChange={handleChanges}\n                  ></Input>\n                  {errors.password.length > 0 ? (\n                    <p className=\"error\">{errors.password}</p>\n                  ) : null}\n                </Label>\n              </FormGroup>\n            </Col>\n\n            <FormGroup check>\n        <Label htmlFor=\"check\" check>\n          <Input \n          type=\"checkbox\"\n          name=\"check\"\n          id=\"check\"\n          value={user.rememberMe} \n          onChange={handleChanges}/> Remember me\n        </Label>\n      </FormGroup>\n\n      <NavLink>Forgot username/password?</NavLink>\n\n            <Button\n              type=\"submit\"\n              disabled={button}\n              onClick={goStudentDashboard}\n              className=\"buttonForm\"\n              style={{ backgroundColor: \"#74CBC1\" }}\n            >\n              Login\n            </Button>\n          </Form>\n        </Container>\n\n        {/* If user hasn't registered, they would click the Register button instead and go to Eric's Register page*/}\n        <div className=\"navRegister\">\n          <NavLink className=\"nonClick\">Haven't registered? </NavLink>\n          <NavLink onClick={goRegister} className=\"click\">\n            Click here\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}