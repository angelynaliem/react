{"ast":null,"code":"var _jsxFileName = \"/Users/angelynaliem/react/devdesk/src/components/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = props => {\n  const history = useHistory();\n\n  const goHome = () => {\n    console.log(\"Going home\");\n    history.push('/');\n  };\n\n  const goRegister = () => {\n    console.log(\"Going to register\");\n    history.push('/register');\n  }; //Set the state for user\n\n\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  }); //Set the state for error \n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\"\n  }); //Set the state for server error\n\n  const [serverError, setServerError] = useState(\"\"); //Set the state for button\n\n  const [button, setButton] = useState(true); //Form schema for login\n\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Name is required\"),\n    password: yup.string().required(\"Password is required\")\n  }); //Form validation function for login\n\n  const validateChange = e => {\n    yup.reach(formSchema, e.target.name).validate(e.target.name ? e.target.value : null).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: \"\" //Clear any error messages\n\n      });\n    }).catch(err => {\n      console.log(err);\n      setErrors({ ...errors,\n        [e.target.name]: err.errors[0] //Display the error message\n\n      });\n    });\n  }; //Handle user input changes for login\n\n\n  const handleChanges = e => {\n    e.persist();\n    console.log(\"new input here!\", e.target.value);\n    const newUser = { ...user,\n      [e.target.name]: e.target.value\n    };\n    validateChange(e);\n    setUser(newUser);\n  }; //Submit form function for login\n\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(\"Form submitted!\");\n    axios.post(\"https://reqres.in/api/users\", user) //Temporary API\n    .then(response => {\n      console.log(\"POST is successful!\", response.data);\n      setServerError(null);\n      setUser({\n        Username: \"\",\n        Password: \"\"\n      }); //Clear the form\n    }).catch(err => {\n      setServerError(\"API POST request failed!\");\n    });\n  }; //If everything checks, then button is enabled\n\n\n  useEffect(() => {\n    formSchema.isValid(user).then(isValid => {\n      setButton(!isValid);\n    });\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, serverError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }\n  }, serverError) : null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-2 mr-sm-2 mb-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Username\", /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"Austin Allred\",\n    value: user.username,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), errors.username.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 39\n    }\n  }, errors.username) : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-2 mr-sm-2 mb-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Password\", /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Don't tell!\",\n    value: user.password,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), errors.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 39\n    }\n  }, errors.password) : null)), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 14\n    }\n  }, \"Haven't registered?\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: goRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 14\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: goHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 14\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 14\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/angelynaliem/react/devdesk/src/components/Login.js"],"names":["React","useState","useEffect","yup","axios","Button","Form","FormGroup","Label","Input","useHistory","Login","props","history","goHome","console","log","push","goRegister","user","setUser","username","password","errors","setErrors","serverError","setServerError","button","setButton","formSchema","object","shape","string","required","validateChange","e","reach","target","name","validate","value","then","valid","catch","err","handleChanges","persist","newUser","submitForm","preventDefault","post","response","data","Username","Password","isValid","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = (props) => {\n\n    const history = useHistory();\n\n    const goHome = () => {\n        console.log(\"Going home\")\n        history.push('/');\n      }\n\n    const goRegister = () => {\n        console.log(\"Going to register\")\n        history.push('/register');\n      }\n\n    //Set the state for user\n    const [user, setUser] = useState({ username: \"\", password: \"\" })\n\n    //Set the state for error \n    const [errors, setErrors] = useState({ username: \"\", password: \"\" })\n\n    //Set the state for server error\n    const [serverError, setServerError] = useState(\"\")\n\n    //Set the state for button\n    const [button, setButton] = useState(true);\n\n    //Form schema for login\n    const formSchema = yup.object().shape({\n\n        username: yup.string().required(\"Name is required\"),\n        password: yup.string().required(\"Password is required\")\n\n    })\n\n     //Form validation function for login\n     const validateChange = (e) => {\n\n        yup\n        .reach(formSchema, e.target.name)\n        .validate(e.target.name ? e.target.value : null)\n        .then(valid => {\n            setErrors({\n                ...errors,\n                [e.target.name]: \"\" //Clear any error messages\n            })\n            \n        })\n        .catch(err => {\n            console.log(err)\n            setErrors({\n                ...errors,\n                [e.target.name] : err.errors[0] //Display the error message\n            })\n        })\n    }\n\n    //Handle user input changes for login\n    const handleChanges = (e) => {\n\n        e.persist()\n        console.log(\"new input here!\", e.target.value)\n        const newUser = { ...user, [e.target.name]: e.target.value }\n        validateChange(e)\n        setUser(newUser)\n      };\n\n      //Submit form function for login\n      const submitForm = (e) => {\n        e.preventDefault(); \n        console.log(\"Form submitted!\")\n\n        axios\n            .post(\"https://reqres.in/api/users\", user) //Temporary API\n            .then(response => {\n                console.log(\"POST is successful!\", response.data)\n                setServerError(null)\n                setUser({ Username: \"\", Password: \"\" }) //Clear the form\n            })\n            .catch(err => {\n                setServerError(\"API POST request failed!\")\n            })\n    \n      };\n\n    //If everything checks, then button is enabled\n    useEffect(() => {\n        formSchema.isValid(user)\n        .then(isValid => {\n            setButton(!isValid)\n        })\n    }, [user])\n\n    return (\n\n        <div>\n\n        <Form inline onSubmit={submitForm}>\n            {serverError ? <p>{serverError}</p> : null}\n\n        {/* Username Field */}\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label htmlFor=\"username\" className=\"mr-sm-2\">\n              Username\n          <Input \n          type=\"text\" \n          name=\"username\" \n          id=\"username\" \n          placeholder=\"Austin Allred\" \n          value={user.username}\n          onChange={handleChanges} >\n          </Input>\n        {errors.username.length > 0 ? <p>{errors.username}</p> : null}\n        </Label>\n        </FormGroup>\n       \n          {/* Password Field */}\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label htmlFor=\"password\" className=\"mr-sm-2\">\n              Password \n          <Input \n          type=\"password\" \n          name=\"password\" \n          id=\"password\" \n          placeholder=\"Don't tell!\"\n          value={user.password}\n          onChange={handleChanges} >\n          </Input>\n        {errors.password.length > 0 ? <p>{errors.password}</p> : null}\n        </Label>\n        </FormGroup>\n       \n        <Button type=\"submit\" disabled = {button} >Submit</Button>\n      \n        </Form>\n\n             {/* If user hasn't registered, they would click the Register button instead and go to Eric's Register page*/}\n             <h3>Haven't registered?</h3>\n            \n             <Button type=\"submit\" onClick={goRegister}>Register</Button>\n\n             <Button onClick={goHome}>Home</Button>\n             <Route exact path=\"/\" />\n\n        </div>\n\n    );\n    \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}