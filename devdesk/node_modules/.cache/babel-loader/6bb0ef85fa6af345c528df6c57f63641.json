{"ast":null,"code":"var _jsxFileName = \"/Users/angelynaliem/react/devdesk/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst Login = props => {\n  const [user, setUser] = useState({\n    Username: \"\",\n    Password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    Username: \"\",\n    Password: \"\"\n  });\n  const [serverError, setServerError] = useState(\"\");\n  const [button, setButton] = useState(true);\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Name is required\"),\n    password: yup.string().min(6, \"Passwords must be at least 6 characters long\").required(\"Password is required\")\n  });\n\n  const handleChanges = e => {\n    e.persist();\n    console.log(\"new input here!\", e.target.value);\n    const newUser = { ...user,\n      [e.target.name]: e.target.value\n    };\n    validateChange(e);\n    setUser(newUser);\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(\"Form submitted!\");\n    axios.post(\"https://reqres.in/api/users\", user).then(response => {\n      console.log(\"POST is successful!\", response.data);\n      setServerError(null);\n      setUser({\n        Username: \"\",\n        Password: \"\"\n      });\n    }).catch(err => {\n      setServerError(\"API POST request failed!\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-2 mr-sm-2 mb-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"Austin Allred\",\n    value: user.username,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-2 mr-sm-2 mb-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Don't tell!\",\n    value: user.password,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Submit\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/angelynaliem/react/devdesk/src/components/Login.js"],"names":["React","useState","yup","axios","Button","Form","FormGroup","Label","Input","Login","props","user","setUser","Username","Password","errors","setErrors","serverError","setServerError","button","setButton","formSchema","object","shape","username","string","required","password","min","handleChanges","e","persist","console","log","target","value","newUser","name","validateChange","submitForm","preventDefault","post","then","response","data","catch","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst Login = (props) => {\n\n    const [user, setUser] = useState({ Username: \"\", Password: \"\" })\n\n    const [errors, setErrors] = useState({ Username: \"\", Password: \"\" })\n\n    const [serverError, setServerError] = useState(\"\")\n\n    const [button, setButton] = useState(true);\n\n    const formSchema = yup.object().shape({\n\n        username: yup.string().required(\"Name is required\"),\n        password: yup.string().min(6, \"Passwords must be at least 6 characters long\").required(\"Password is required\")\n\n    })\n\n    const handleChanges = (e) => {\n\n        e.persist()\n        console.log(\"new input here!\", e.target.value)\n        const newUser = { ...user, [e.target.name]: e.target.value }\n        validateChange(e)\n        setUser(newUser)\n      };\n\n      const submitForm = (e) => {\n        e.preventDefault(); \n        console.log(\"Form submitted!\")\n\n        axios\n            .post(\"https://reqres.in/api/users\", user)\n            .then(response => {\n                console.log(\"POST is successful!\", response.data)\n                setServerError(null)\n                setUser({ Username: \"\", Password: \"\" }) \n            })\n            .catch(err => {\n                setServerError(\"API POST request failed!\")\n            })\n    \n      };\n\n    return (\n\n        <Form inline onSubmit={submitForm}>\n\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label htmlFor=\"username\" className=\"mr-sm-2\">Username</Label>\n          <Input \n          type=\"text\" \n          name=\"username\" \n          id=\"username\" \n          placeholder=\"Austin Allred\" \n          value={user.username}\n          onChange={handleChanges} />\n        </FormGroup>\n        \n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label htmlFor=\"password\" className=\"mr-sm-2\">Password</Label>\n          <Input \n          type=\"password\" \n          name=\"password\" \n          id=\"password\" \n          placeholder=\"Don't tell!\"\n          value={user.password}\n          onChange={handleChanges} />\n        </FormGroup>\n        \n        <Button type=\"submit \">Submit</Button>\n      \n        </Form>\n\n    );\n    \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}